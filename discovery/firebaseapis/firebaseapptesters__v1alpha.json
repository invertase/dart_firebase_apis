{
    "auth": {
        "oauth2": {
            "scopes": {
                "https://www.googleapis.com/auth/cloud-platform": {
                    "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
                }
            }
        }
    },
    "basePath": "",
    "baseUrl": "https://firebaseapptesters.googleapis.com/",
    "batchPath": "batch",
    "canonicalName": "Firebaseapptesters",
    "description": "",
    "discoveryVersion": "v1",
    "documentationLink": "https://firebase.google.com/products/app-distribution",
    "icons": {
        "x16": "http://www.google.com/images/icons/product/search-16.gif",
        "x32": "http://www.google.com/images/icons/product/search-32.gif"
    },
    "id": "firebaseapptesters:v1alpha",
    "kind": "discovery#restDescription",
    "name": "firebaseapptesters",
    "ownerDomain": "google.com",
    "ownerName": "Google",
    "parameters": {
        "$.xgafv": {
            "description": "V1 error format.",
            "enum": [
                "1",
                "2"
            ],
            "enumDescriptions": [
                "v1 error format",
                "v2 error format"
            ],
            "location": "query",
            "type": "string"
        },
        "access_token": {
            "description": "OAuth access token.",
            "location": "query",
            "type": "string"
        },
        "alt": {
            "default": "json",
            "description": "Data format for response.",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "enumDescriptions": [
                "Responses with Content-Type of application/json",
                "Media download with context-dependent Content-Type",
                "Responses with Content-Type of application/x-protobuf"
            ],
            "location": "query",
            "type": "string"
        },
        "callback": {
            "description": "JSONP",
            "location": "query",
            "type": "string"
        },
        "fields": {
            "description": "Selector specifying which fields to include in a partial response.",
            "location": "query",
            "type": "string"
        },
        "key": {
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "location": "query",
            "type": "string"
        },
        "oauth_token": {
            "description": "OAuth 2.0 token for the current user.",
            "location": "query",
            "type": "string"
        },
        "prettyPrint": {
            "default": "true",
            "description": "Returns response with indentations and line breaks.",
            "location": "query",
            "type": "boolean"
        },
        "quotaUser": {
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "location": "query",
            "type": "string"
        },
        "uploadType": {
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "location": "query",
            "type": "string"
        },
        "upload_protocol": {
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "location": "query",
            "type": "string"
        }
    },
    "protocol": "rest",
    "resources": {
        "devices": {
            "methods": {
                "create": {
                    "description": "Creates a device",
                    "flatPath": "v1alpha/devices",
                    "httpMethod": "POST",
                    "id": "firebaseapptesters.devices.create",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1alpha/devices",
                    "request": {
                        "$ref": "GoogleFirebaseApptestersV1alphaDevice"
                    },
                    "response": {
                        "$ref": "GoogleFirebaseApptestersV1alphaDevice"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                },
                "get": {
                    "description": "Get a single device",
                    "flatPath": "v1alpha/devices/{devicesId}",
                    "httpMethod": "GET",
                    "id": "firebaseapptesters.devices.get",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Required. The name of the device to retrieve Format: devices/{device}",
                            "location": "path",
                            "pattern": "^devices/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1alpha/{+name}",
                    "response": {
                        "$ref": "GoogleFirebaseApptestersV1alphaDevice"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                },
                "list": {
                    "description": "Get a list of devices for a tester A device represents a physical device that is used by a tester to test an app. Testers can use multiple devices to test apps. For each device a tester uses, the tester must consent to sharing the device's data for an app in order to view that app's releases. This is required for iOS apps. Specifically, for iOS apps with Ad-hoc distributions, we need to access the devices UUID to determine if the release can be downloaded on the tester's device. Devices are parents of apps because the device that a tester is using affects the values of fields in the App and Release messages.",
                    "flatPath": "v1alpha/devices",
                    "httpMethod": "GET",
                    "id": "firebaseapptesters.devices.list",
                    "parameterOrder": [],
                    "parameters": {
                        "pageSize": {
                            "description": "Maximum number of devices to return",
                            "format": "int32",
                            "location": "query",
                            "type": "integer"
                        },
                        "pageToken": {
                            "description": "Page token received from previous ListDevices call",
                            "location": "query",
                            "type": "string"
                        }
                    },
                    "path": "v1alpha/devices",
                    "response": {
                        "$ref": "GoogleFirebaseApptestersV1alphaListDevicesResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                }
            },
            "resources": {
                "testerApps": {
                    "methods": {
                        "consent": {
                            "description": "Consent to share the device's data for an app Testers are required to consent to having the device's data shared for the app in order to view the app's releases.",
                            "flatPath": "v1alpha/devices/{devicesId}/testerApps/{testerAppsId}:consent",
                            "httpMethod": "POST",
                            "id": "firebaseapptesters.devices.testerApps.consent",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required. The name of the app Format: devices/{devices}/testerApps/{tester_app}",
                                    "location": "path",
                                    "pattern": "^devices/[^/]+/testerApps/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1alpha/{+name}:consent",
                            "request": {
                                "$ref": "GoogleFirebaseApptestersV1alphaConsentAppRequest"
                            },
                            "response": {
                                "$ref": "GoogleFirebaseApptestersV1alphaConsentAppResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "delete": {
                            "description": "Leave a particular app that a tester has access to",
                            "flatPath": "v1alpha/devices/{devicesId}/testerApps/{testerAppsId}",
                            "httpMethod": "DELETE",
                            "id": "firebaseapptesters.devices.testerApps.delete",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required. The name of the app Format: devices/{devices}/testerApps/{tester_app}",
                                    "location": "path",
                                    "pattern": "^devices/[^/]+/testerApps/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1alpha/{+name}",
                            "response": {
                                "$ref": "GoogleProtobufEmpty"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "get": {
                            "description": "Get a single app for a device",
                            "flatPath": "v1alpha/devices/{devicesId}/testerApps/{testerAppsId}",
                            "httpMethod": "GET",
                            "id": "firebaseapptesters.devices.testerApps.get",
                            "parameterOrder": [
                                "name"
                            ],
                            "parameters": {
                                "name": {
                                    "description": "Required. The name of the tester app to retrieve Format: devices/{device}/testerApps/{tester_app}",
                                    "location": "path",
                                    "pattern": "^devices/[^/]+/testerApps/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1alpha/{+name}",
                            "response": {
                                "$ref": "GoogleFirebaseApptestersV1alphaTesterApp"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        },
                        "list": {
                            "description": "Get a list of apps for a device",
                            "flatPath": "v1alpha/devices/{devicesId}/testerApps",
                            "httpMethod": "GET",
                            "id": "firebaseapptesters.devices.testerApps.list",
                            "parameterOrder": [
                                "parent"
                            ],
                            "parameters": {
                                "pageSize": {
                                    "description": "Maximum number of apps to return",
                                    "format": "int32",
                                    "location": "query",
                                    "type": "integer"
                                },
                                "pageToken": {
                                    "description": "Page token received from previous ListTesterApps calld",
                                    "location": "query",
                                    "type": "string"
                                },
                                "parent": {
                                    "description": "Required. The parent, which owns the app Format: devices/{device}",
                                    "location": "path",
                                    "pattern": "^devices/[^/]+$",
                                    "required": true,
                                    "type": "string"
                                }
                            },
                            "path": "v1alpha/{+parent}/testerApps",
                            "response": {
                                "$ref": "GoogleFirebaseApptestersV1alphaListTesterAppsResponse"
                            },
                            "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                            ]
                        }
                    },
                    "resources": {
                        "installations": {
                            "methods": {
                                "create": {
                                    "description": "Create a new TesterAppInstallation record to register a Firebase Installation ID with a specific Tester to enable FID based auth from the SDK",
                                    "flatPath": "v1alpha/devices/{devicesId}/testerApps/{testerAppsId}/installations",
                                    "httpMethod": "POST",
                                    "id": "firebaseapptesters.devices.testerApps.installations.create",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "fid": {
                                            "description": "Required. The firebase installation id to register",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "parent": {
                                            "description": "Required. The parent resource where this TesterAppInstallation will be created Format: devices/{device}/testerApps/{tester_app}",
                                            "location": "path",
                                            "pattern": "^devices/[^/]+/testerApps/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        }
                                    },
                                    "path": "v1alpha/{+parent}/installations",
                                    "request": {
                                        "$ref": "GoogleFirebaseApptestersV1alphaTesterAppInstallation"
                                    },
                                    "response": {
                                        "$ref": "GoogleFirebaseApptestersV1alphaTesterAppInstallation"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                }
                            },
                            "resources": {
                                "releases": {
                                    "methods": {
                                        "list": {
                                            "description": "List releases for an app by firebase installation id (FID)",
                                            "flatPath": "v1alpha/devices/{devicesId}/testerApps/{testerAppsId}/installations/{installationsId}/releases",
                                            "httpMethod": "GET",
                                            "id": "firebaseapptesters.devices.testerApps.installations.releases.list",
                                            "parameterOrder": [
                                                "parent"
                                            ],
                                            "parameters": {
                                                "pageSize": {
                                                    "description": "Maximum number of releases to return",
                                                    "format": "int32",
                                                    "location": "query",
                                                    "type": "integer"
                                                },
                                                "pageToken": {
                                                    "description": "Page token received from previous ListDevices call",
                                                    "location": "query",
                                                    "type": "string"
                                                },
                                                "parent": {
                                                    "description": "Required. The parent, which owns the collection of installation releases Format: devices/{devices}/testerApps/{tester_app}/installations/{installation}",
                                                    "location": "path",
                                                    "pattern": "^devices/[^/]+/testerApps/[^/]+/installations/[^/]+$",
                                                    "required": true,
                                                    "type": "string"
                                                }
                                            },
                                            "path": "v1alpha/{+parent}/releases",
                                            "response": {
                                                "$ref": "GoogleFirebaseApptestersV1alphaListTesterAppInstallationReleasesResponse"
                                            },
                                            "scopes": [
                                                "https://www.googleapis.com/auth/cloud-platform"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "releases": {
                            "methods": {
                                "download": {
                                    "description": "Download a release This endpoint is authenticated with the token query param. To make a request to this endpoint, use the URL returned by ListReleases, in the download_url field on each Release, which contains an expiring token that validates calls using that URL only.",
                                    "flatPath": "v1alpha/devices/{devicesId}/testerApps/{testerAppsId}/releases/{releasesId}:download",
                                    "httpMethod": "GET",
                                    "id": "firebaseapptesters.devices.testerApps.releases.download",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required. The name of the release to download Format: devices/{device}/testerApps/{tester_app}/releases/{release}",
                                            "location": "path",
                                            "pattern": "^devices/[^/]+/testerApps/[^/]+/releases/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "testerClient": {
                                            "description": "The tester client which this download request is coming from",
                                            "enum": [
                                                "TESTER_CLIENT_UNSPECIFIED",
                                                "ANDROID_TESTER_APP",
                                                "WEB",
                                                "IOS_SDK",
                                                "ANDROID_SDK"
                                            ],
                                            "enumDescriptions": [
                                                "Tester client unspecified",
                                                "App Tester native android app",
                                                "Web-based tester client (Android & iOS)",
                                                "iOS SDK (new build alerts)",
                                                "Android SDK (new build alerts)"
                                            ],
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "token": {
                                            "description": "Required. A temporary signed token verifying the URL This is set in DownloadUrlCreator and validated in DownloadReleaseAction using RequestUrlVerifier",
                                            "location": "query",
                                            "type": "string"
                                        }
                                    },
                                    "path": "v1alpha/{+name}:download",
                                    "response": {
                                        "$ref": "GoogleApiHttpBody"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                },
                                "get": {
                                    "description": "Get a single release for the app",
                                    "flatPath": "v1alpha/devices/{devicesId}/testerApps/{testerAppsId}/releases/{releasesId}",
                                    "httpMethod": "GET",
                                    "id": "firebaseapptesters.devices.testerApps.releases.get",
                                    "parameterOrder": [
                                        "name"
                                    ],
                                    "parameters": {
                                        "name": {
                                            "description": "Required. The name of the release to retrieve Format: devices/{device}/testerApps/{tester_app}/releases/{release}",
                                            "location": "path",
                                            "pattern": "^devices/[^/]+/testerApps/[^/]+/releases/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "testerClient": {
                                            "description": "The tester client which this download request is coming from",
                                            "enum": [
                                                "TESTER_CLIENT_UNSPECIFIED",
                                                "ANDROID_TESTER_APP",
                                                "WEB",
                                                "IOS_SDK",
                                                "ANDROID_SDK"
                                            ],
                                            "enumDescriptions": [
                                                "Tester client unspecified",
                                                "App Tester native android app",
                                                "Web-based tester client (Android & iOS)",
                                                "iOS SDK (new build alerts)",
                                                "Android SDK (new build alerts)"
                                            ],
                                            "location": "query",
                                            "type": "string"
                                        }
                                    },
                                    "path": "v1alpha/{+name}",
                                    "response": {
                                        "$ref": "GoogleFirebaseApptestersV1alphaRelease"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                },
                                "list": {
                                    "description": "List releases for the app",
                                    "flatPath": "v1alpha/devices/{devicesId}/testerApps/{testerAppsId}/releases",
                                    "httpMethod": "GET",
                                    "id": "firebaseapptesters.devices.testerApps.releases.list",
                                    "parameterOrder": [
                                        "parent"
                                    ],
                                    "parameters": {
                                        "filter": {
                                            "description": "Filter for the list of releases. Used in search.",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "pageSize": {
                                            "description": "Maximum number of releases to return",
                                            "format": "int32",
                                            "location": "query",
                                            "type": "integer"
                                        },
                                        "pageToken": {
                                            "description": "Page token received from previous `ListReleases` call",
                                            "location": "query",
                                            "type": "string"
                                        },
                                        "parent": {
                                            "description": "Required. The parent, which owns the collection of releases Format: devices/{devices}/testerApps/{tester_app}",
                                            "location": "path",
                                            "pattern": "^devices/[^/]+/testerApps/[^/]+$",
                                            "required": true,
                                            "type": "string"
                                        },
                                        "testerClient": {
                                            "description": "The tester client which this download request is coming from",
                                            "enum": [
                                                "TESTER_CLIENT_UNSPECIFIED",
                                                "ANDROID_TESTER_APP",
                                                "WEB",
                                                "IOS_SDK",
                                                "ANDROID_SDK"
                                            ],
                                            "enumDescriptions": [
                                                "Tester client unspecified",
                                                "App Tester native android app",
                                                "Web-based tester client (Android & iOS)",
                                                "iOS SDK (new build alerts)",
                                                "Android SDK (new build alerts)"
                                            ],
                                            "location": "query",
                                            "type": "string"
                                        }
                                    },
                                    "path": "v1alpha/{+parent}/releases",
                                    "response": {
                                        "$ref": "GoogleFirebaseApptestersV1alphaListReleasesResponse"
                                    },
                                    "scopes": [
                                        "https://www.googleapis.com/auth/cloud-platform"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "invitations": {
            "methods": {
                "get": {
                    "description": "Get invitation for tester. Invitations are created by Developers or by testers via invite links. Invitations link an email address to an app.",
                    "flatPath": "v1alpha/invitations/{invitationsId}",
                    "httpMethod": "GET",
                    "id": "firebaseapptesters.invitations.get",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Required. The name of the app to retrieve Format: invitations/{invitation}",
                            "location": "path",
                            "pattern": "^invitations/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1alpha/{+name}",
                    "response": {
                        "$ref": "GoogleFirebaseApptestersV1alphaInvitation"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                },
                "subscribe": {
                    "description": "Subscribe to invitation Testers use this method to update the subscription status for the email address that is associated with the invitation.",
                    "flatPath": "v1alpha/invitations/{invitationsId}:subscribe",
                    "httpMethod": "POST",
                    "id": "firebaseapptesters.invitations.subscribe",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Required. The name of the invitation Format: invitations/{invitation}",
                            "location": "path",
                            "pattern": "^invitations/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1alpha/{+name}:subscribe",
                    "request": {
                        "$ref": "GoogleFirebaseApptestersV1alphaSubscribeInvitationRequest"
                    },
                    "response": {
                        "$ref": "GoogleProtobufEmpty"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                },
                "unsubscribe": {
                    "description": "Unsubscribe from invitation Testers use this method to update the unsubscription status for the email address that is associated with the invitation.",
                    "flatPath": "v1alpha/invitations/{invitationsId}:unsubscribe",
                    "httpMethod": "POST",
                    "id": "firebaseapptesters.invitations.unsubscribe",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Required. The name of the invitation Format: invitations/{invitation}",
                            "location": "path",
                            "pattern": "^invitations/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1alpha/{+name}:unsubscribe",
                    "request": {
                        "$ref": "GoogleFirebaseApptestersV1alphaUnsubscribeInvitationRequest"
                    },
                    "response": {
                        "$ref": "GoogleProtobufEmpty"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                }
            }
        },
        "inviteLinks": {
            "methods": {
                "accept": {
                    "description": "Accepts an invite link for an app When a tester accepts an invite link, an invitation is created and an email is sent",
                    "flatPath": "v1alpha/inviteLinks/{inviteLinksId}:accept",
                    "httpMethod": "POST",
                    "id": "firebaseapptesters.inviteLinks.accept",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Required. The name of the invite link Format: inviteLinks/{invite_link}",
                            "location": "path",
                            "pattern": "^inviteLinks/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1alpha/{+name}:accept",
                    "request": {
                        "$ref": "GoogleFirebaseApptestersV1alphaAcceptInviteLinkRequest"
                    },
                    "response": {
                        "$ref": "GoogleFirebaseApptestersV1alphaAcceptInviteLinkResponse"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                },
                "get": {
                    "description": "Get invite link. Invite links are created by developers. Developers can send a single link to multiple testers versus inviting testers one by one. Testers can use invite links to invite themselves to test an app.",
                    "flatPath": "v1alpha/inviteLinks/{inviteLinksId}",
                    "httpMethod": "GET",
                    "id": "firebaseapptesters.inviteLinks.get",
                    "parameterOrder": [
                        "name"
                    ],
                    "parameters": {
                        "name": {
                            "description": "Required. The name of the invite link to retrieve Format: inviteLinks/{invite_link}",
                            "location": "path",
                            "pattern": "^inviteLinks/[^/]+$",
                            "required": true,
                            "type": "string"
                        }
                    },
                    "path": "v1alpha/{+name}",
                    "response": {
                        "$ref": "GoogleFirebaseApptestersV1alphaInviteLink"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                }
            }
        },
        "v1alpha": {
            "methods": {
                "deleteDevices": {
                    "description": "Delete all devices",
                    "flatPath": "v1alpha/devices",
                    "httpMethod": "DELETE",
                    "id": "firebaseapptesters.deleteDevices",
                    "parameterOrder": [],
                    "parameters": {},
                    "path": "v1alpha/devices",
                    "response": {
                        "$ref": "GoogleProtobufEmpty"
                    },
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ]
                }
            }
        }
    },
    "revision": "20220505",
    "rootUrl": "https://firebaseapptesters.googleapis.com/",
    "schemas": {
        "GoogleApiHttpBody": {
            "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "id": "GoogleApiHttpBody",
            "properties": {
                "contentType": {
                    "description": "The HTTP Content-Type header value specifying the content type of the body.",
                    "type": "string"
                },
                "data": {
                    "description": "The HTTP request/response body as raw binary.",
                    "format": "byte",
                    "type": "string"
                },
                "extensions": {
                    "description": "Application specific response metadata. Must be set in the first response for streaming APIs.",
                    "items": {
                        "additionalProperties": {
                            "description": "Properties of the object. Contains field @type with type URL.",
                            "type": "any"
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleFirebaseApptestersV1alphaAcceptInviteLinkRequest": {
            "description": "The request object for the AcceptInviteLink call",
            "id": "GoogleFirebaseApptestersV1alphaAcceptInviteLinkRequest",
            "properties": {
                "email": {
                    "description": "Email address",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleFirebaseApptestersV1alphaAcceptInviteLinkResponse": {
            "description": "The response object for the AcceptInviteLink call",
            "id": "GoogleFirebaseApptestersV1alphaAcceptInviteLinkResponse",
            "properties": {
                "result": {
                    "description": "The result from accepting the invite link",
                    "enum": [
                        "RESULT_UNSPECIFIED",
                        "READY_TO_TEST",
                        "AWAITING_RELEASE",
                        "TESTER_LIMIT_REACHED",
                        "INVALID_EMAIL"
                    ],
                    "enumDescriptions": [
                        "Default result. Unused.",
                        "An invitation emails was sent to the tester.",
                        "There is not yet an eligible release for this invite link, so no invitation was created",
                        "The app has reached tester limit for group or project",
                        "Invalid email"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleFirebaseApptestersV1alphaConsentAppRequest": {
            "description": "The request object for the ConsentApp call",
            "id": "GoogleFirebaseApptestersV1alphaConsentAppRequest",
            "properties": {
                "invitation": {
                    "description": "Invitation name. Needed if this is the testers first time consenting to share the device's data for the app to verify that tester was invited to the app",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleFirebaseApptestersV1alphaConsentAppResponse": {
            "description": "The response object for the ConsentApp call",
            "id": "GoogleFirebaseApptestersV1alphaConsentAppResponse",
            "properties": {},
            "type": "object"
        },
        "GoogleFirebaseApptestersV1alphaDevice": {
            "description": "A representation of the testers device",
            "id": "GoogleFirebaseApptestersV1alphaDevice",
            "properties": {
                "enrollIosDeviceUri": {
                    "description": "Uri to enroll the iOS device as a part of the apple OTA profile enrollment. Only present if the device is an iOS device and we don't already know its udid",
                    "type": "string"
                },
                "manufacturer": {
                    "description": "Manufacturer",
                    "type": "string"
                },
                "model": {
                    "description": "Model",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the device Format: devices/{device}",
                    "type": "string"
                },
                "osVersion": {
                    "description": "OS version",
                    "type": "string"
                },
                "platform": {
                    "description": "Platform",
                    "enum": [
                        "PLATFORM_UNSPECIFIED",
                        "IOS",
                        "ANDROID"
                    ],
                    "enumDescriptions": [
                        "Default value. This value is unused.",
                        "IOS",
                        "Android"
                    ],
                    "type": "string"
                },
                "udid": {
                    "description": "The unique device identifier (iOS only)",
                    "type": "string"
                },
                "useragent": {
                    "description": "The user agent string from the browser (passed along in the proxy call).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleFirebaseApptestersV1alphaInvitation": {
            "description": "An invitation maps an email to an app. An invitation is required to link a testers device to an app via the ConsentApp call.",
            "id": "GoogleFirebaseApptestersV1alphaInvitation",
            "properties": {
                "name": {
                    "description": "The name of the invitation to retrieve Format: invitations/{invitation}",
                    "type": "string"
                },
                "state": {
                    "description": "Invitation state",
                    "enum": [
                        "INVITATION_STATE_UNSPECIFIED",
                        "INVITED",
                        "PENDING_ACCEPT",
                        "ACCEPTED"
                    ],
                    "enumDescriptions": [
                        "Default value. This value is unused.",
                        "Tester has received an email for the latest release",
                        "Tester has received email for previous release, but has not received an email for the current release because they have not accepted the email to the previous release",
                        "Tester has accepted an email for a release"
                    ],
                    "type": "string"
                },
                "subscriptionState": {
                    "description": "Subscription state",
                    "enum": [
                        "SUBSCRIPTION_STATE_UNSPECIFIED",
                        "SUBSCRIBED",
                        "UNSUBSCRIBED"
                    ],
                    "enumDescriptions": [
                        "Default value. This value is unused.",
                        "Subscribed",
                        "Unsubscribed"
                    ],
                    "type": "string"
                },
                "testerApp": {
                    "$ref": "GoogleFirebaseApptestersV1alphaTesterApp",
                    "description": "Information about the app that this invitation belongs to"
                },
                "testerEmail": {
                    "description": "The tester email that the invite was sent to",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleFirebaseApptestersV1alphaInviteLink": {
            "description": "The representation of an invite link",
            "id": "GoogleFirebaseApptestersV1alphaInviteLink",
            "properties": {
                "domainRestriction": {
                    "description": "Email domain restriction set by developer. Testers will only be able to accept invite links using an email with this domain.",
                    "type": "string"
                },
                "joinable": {
                    "description": "Whether or not this invite link can be joined (determined by tester limits)",
                    "type": "boolean"
                },
                "name": {
                    "description": "The name of the invite link Format: inviteLinks/{inviteLink)",
                    "type": "string"
                },
                "testerApps": {
                    "description": "List of apps that the tester will be invited to after accepting",
                    "items": {
                        "$ref": "GoogleFirebaseApptestersV1alphaTesterApp"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleFirebaseApptestersV1alphaListDevicesResponse": {
            "description": "Response object for ListDevices call",
            "id": "GoogleFirebaseApptestersV1alphaListDevicesResponse",
            "properties": {
                "devices": {
                    "description": "List of devices",
                    "items": {
                        "$ref": "GoogleFirebaseApptestersV1alphaDevice"
                    },
                    "type": "array"
                },
                "nextPageToken": {
                    "description": "A token which can be sent as `page_token` to retrieve the next page If this field is omitted, there are no subsequent pages",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleFirebaseApptestersV1alphaListReleasesResponse": {
            "description": "The response object for the ListReleases call",
            "id": "GoogleFirebaseApptestersV1alphaListReleasesResponse",
            "properties": {
                "nextPageToken": {
                    "description": "A token which can be sent as `page_token` to retrieve the next page If this field is omitted, there are no subsequent pages",
                    "type": "string"
                },
                "releases": {
                    "description": "List of releases",
                    "items": {
                        "$ref": "GoogleFirebaseApptestersV1alphaRelease"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleFirebaseApptestersV1alphaListTesterAppInstallationReleasesResponse": {
            "description": "The response object for the ListTesterAppInstallationReleases call",
            "id": "GoogleFirebaseApptestersV1alphaListTesterAppInstallationReleasesResponse",
            "properties": {
                "nextPageToken": {
                    "description": "A token which can be sent as `page_token` to retrieve the next page If this field is omitted, there are no subsequent pages",
                    "type": "string"
                },
                "releases": {
                    "description": "List of releases",
                    "items": {
                        "$ref": "GoogleFirebaseApptestersV1alphaRelease"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleFirebaseApptestersV1alphaListTesterAppsResponse": {
            "description": "The response object for the ListTesterApps call",
            "id": "GoogleFirebaseApptestersV1alphaListTesterAppsResponse",
            "properties": {
                "nextPageToken": {
                    "description": "A token which can be sent as `page_token` to retrieve the next page If this field is omitted, there are no subsequent pages",
                    "type": "string"
                },
                "testerApps": {
                    "description": "List of tester apps",
                    "items": {
                        "$ref": "GoogleFirebaseApptestersV1alphaTesterApp"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "GoogleFirebaseApptestersV1alphaRelease": {
            "description": "A representation of an app release",
            "id": "GoogleFirebaseApptestersV1alphaRelease",
            "properties": {
                "apkHash": {
                    "description": "Computationally-efficient hash of an apk. This value is computed in our backend and our Android SDK by zipping the apk file. Used by the SDK to map a release on the device to a release returned from the server.",
                    "type": "string"
                },
                "binaryType": {
                    "description": "Type of binary",
                    "enum": [
                        "BINARY_TYPE_UNSPECIFIED",
                        "IPA",
                        "APK",
                        "AAB"
                    ],
                    "enumDescriptions": [
                        "Binary type unspecified",
                        "iOS app store package",
                        "Android application package",
                        "Android app bundle"
                    ],
                    "type": "string"
                },
                "buildVersion": {
                    "description": "versionCode on Android, CFBundleVersion on iOS (e.g. \"456\")",
                    "type": "string"
                },
                "codeHash": {
                    "description": "Hash of binary on Android, modified hash excluding app metadata (e.g. provisioning profile) on iOS. NOTE - releases with the same code but different version numbers will have the same code_hash NOTE - ad-hoc iOS releases with the same code but different provisioning profiles will have the same code_hash",
                    "type": "string"
                },
                "displayVersion": {
                    "description": "versionName on Android, CFBundleShortVersionString on iOS (e.g. \"1.2.3\")",
                    "type": "string"
                },
                "distributionMissingReason": {
                    "description": "Reason (if any) why the release is missing a distribution for this device",
                    "enum": [
                        "DISTRIBUTION_MISSING_REASON_UNSPECIFIED",
                        "NO_DISTRIBUTIONS",
                        "WRONG_DEVICE",
                        "NO_ARCHITECTURE",
                        "OLD_OS_VERSION",
                        "NO_UDID"
                    ],
                    "enumDescriptions": [
                        "Distribution missing reason unspecified",
                        "",
                        "Device not supported",
                        "Device not supported",
                        "Device OS version not supported",
                        "Waiting for developer to add device's UDID to the release"
                    ],
                    "type": "string"
                },
                "downloadUrl": {
                    "description": "Short-lived download URL",
                    "type": "string"
                },
                "enterprise": {
                    "description": "Whether or not this is an enterprise release (vs. ad-hoc) for iOS",
                    "type": "boolean"
                },
                "expirationTime": {
                    "description": "The time at which this Release will expire",
                    "format": "google-datetime",
                    "type": "string"
                },
                "fileSize": {
                    "description": "App binary file size",
                    "format": "int64",
                    "type": "string"
                },
                "iasArtifactId": {
                    "description": "IAS artifact id This value is inserted into the manifest of APK's installed via IAS in the com.android.vending.internal.apk.id metadata field Used to map a release to an APK installed via an app bundle",
                    "type": "string"
                },
                "latest": {
                    "description": "Whether or not this is the latest release that the tester has been added to",
                    "type": "boolean"
                },
                "name": {
                    "description": "The name of the release Format: devices/{device}/testerApps/{tester_app}/releases/{release}",
                    "type": "string"
                },
                "releaseNotes": {
                    "description": "Release notes",
                    "type": "string"
                },
                "releaseTime": {
                    "description": "Timestamp when the initial invitation(s) were sent for the release",
                    "format": "google-datetime",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleFirebaseApptestersV1alphaSubscribeInvitationRequest": {
            "description": "The request object for the SubscribeInvitation call",
            "id": "GoogleFirebaseApptestersV1alphaSubscribeInvitationRequest",
            "properties": {},
            "type": "object"
        },
        "GoogleFirebaseApptestersV1alphaTesterApp": {
            "description": "A representation of an app.",
            "id": "GoogleFirebaseApptestersV1alphaTesterApp",
            "properties": {
                "bundleId": {
                    "description": "The bundle identifier of the app",
                    "type": "string"
                },
                "consented": {
                    "description": "Tester has consented to share the device's data for the app",
                    "type": "boolean"
                },
                "contactEmail": {
                    "description": "Developer contact email for testers to reach out to about privacy or support issues.",
                    "type": "string"
                },
                "display": {
                    "description": "Display name of the app",
                    "type": "string"
                },
                "iconUrl": {
                    "description": "URL of app icon",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the tester app to retrieve Format: devices/{device}/testerApps/{tester_app}",
                    "type": "string"
                },
                "platform": {
                    "description": "The platform of the app (iOS or Android)",
                    "type": "string"
                },
                "releaseCount": {
                    "description": "Number of releases for the app",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GoogleFirebaseApptestersV1alphaTesterAppInstallation": {
            "description": "The TesterAppInstallation resource",
            "id": "GoogleFirebaseApptestersV1alphaTesterAppInstallation",
            "properties": {
                "name": {
                    "description": "Required. The TesterAppInstallation resource name Format: devices/{device}/testerApps/{tester_app}/installations/{installation}",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GoogleFirebaseApptestersV1alphaUnsubscribeInvitationRequest": {
            "description": "The request object for the UnsubscribeInvitation call",
            "id": "GoogleFirebaseApptestersV1alphaUnsubscribeInvitationRequest",
            "properties": {},
            "type": "object"
        },
        "GoogleProtobufEmpty": {
            "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "id": "GoogleProtobufEmpty",
            "properties": {},
            "type": "object"
        }
    },
    "servicePath": "",
    "title": "Firebase App Testers API",
    "version": "v1alpha",
    "version_module": true
}